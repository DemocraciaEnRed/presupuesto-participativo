const Vote = require('lib/models').Vote

/**
 * Default find Method, to be used in favor of Model.find()
 * @method find
 * @param  {object} query - mongoose query options
 * @return {Mongoose Query}
 */
function find (query) {
  return Vote.find(Object.assign({
    deletedAt: null
  }, query))
}

exports.find = find


/**
 * Create a vote
 * @method create
 * @param  {object} opts.user - User author of the vote
 * @param  {boolean} opts.userPrivileges - To know if the vote was generated by the admin user
 * @param {string} opts.dni - DNI of the voter
 * @param  {object} opts.zona - Zona of the voter
 * @param  {object} opts.voto1 - Topic
 * @param  {object} opts.voto2 - Topic
 * @return {promise}
 */
 exports.create = function create (opts) {
  const user = opts.user
  const userPrivileges = opts.userPrivileges
  const dni = opts.dni
  const zona = opts.zona
  const voto1 = opts.voto1
  const voto2 = opts.voto2

  return Vote
    .create({
      user,
      userPrivileges,
      dni,
      zona,
      voto1,
      voto2,
    })
}


/**
 * Query to find out if a citizen has already voted
 * @method hasVoted
 * @param {string} opts.dni - DNI of the voter
 * @return {promise}
 */
 exports.hasVoted = function hasVoted (opts) {
  const dni = opts.dni

  return Vote
    .find()
    .findOne()
    .where({ dni: dni })
    .exec()
    .then((vote) => {
      if (vote) return "yes"
      return "no"
    })
}
